/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        CARET1: CARET_1 {
            compatible = "zmk,behavior-mod-morph";
            label = "CARET_1";
            #binding-cells = <0>;
            bindings = <&kp N1>, <&kp CARET>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        LBRC2: LBRC_2 {
            compatible = "zmk,behavior-mod-morph";
            label = "LBRC_2";
            #binding-cells = <0>;
            bindings = <&kp N2>, <&kp LEFT_BRACE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        LBKT3: LBKT_3 {
            compatible = "zmk,behavior-mod-morph";
            label = "LBKT_3";
            #binding-cells = <0>;
            bindings = <&kp N3>, <&kp LEFT_BRACKET>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        LPAR4: LPAR_4 {
            compatible = "zmk,behavior-mod-morph";
            label = "LPAR_4";
            #binding-cells = <0>;
            bindings = <&kp N4>, <&kp LEFT_PARENTHESIS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        LT5: LT_5 {
            compatible = "zmk,behavior-mod-morph";
            label = "LT_5";
            #binding-cells = <0>;
            bindings = <&kp N5>, <&kp LESS_THAN>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        GT6: GT_6 {
            compatible = "zmk,behavior-mod-morph";
            label = "GT_6";
            #binding-cells = <0>;
            bindings = <&kp N6>, <&kp GREATER_THAN>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        RPAR7: RPAR_7 {
            compatible = "zmk,behavior-mod-morph";
            label = "RPAR_7";
            #binding-cells = <0>;
            bindings = <&kp N7>, <&kp RIGHT_PARENTHESIS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        RBKT8: RBKT_8 {
            compatible = "zmk,behavior-mod-morph";
            label = "RBKT_8";
            #binding-cells = <0>;
            bindings = <&kp N8>, <&kp RIGHT_BRACKET>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        RBRC9: RBRC_9 {
            compatible = "zmk,behavior-mod-morph";
            label = "RBRC_9";
            #binding-cells = <0>;
            bindings = <&kp N9>, <&kp RIGHT_BRACE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        DLLR0: DLLR_0 {
            compatible = "zmk,behavior-mod-morph";
            label = "DLLR_0";
            #binding-cells = <0>;
            bindings = <&kp N0>, <&kp DOLLAR>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        EXCLASTRK: EXCL_ASTRK {
            compatible = "zmk,behavior-mod-morph";
            label = "EXCL_ASTRK";
            #binding-cells = <0>;
            bindings = <&kp EXCL>, <&kp ASTRK>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        AMPSPRCNT: AMPS_PRCNT {
            compatible = "zmk,behavior-mod-morph";
            label = "AMPS_PRCNT";
            #binding-cells = <0>;
            bindings = <&kp AMPS>, <&kp PRCNT>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        ATHASH: AT_HASH {
            compatible = "zmk,behavior-mod-morph";
            label = "AT_HASH";
            #binding-cells = <0>;
            bindings = <&kp AT>, <&kp HASH>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &CARET1    &LBRC2   &LBKT3    &LPAR4     &LT5   &tog 3                                                   &mo 2      &GT6   &RPAR7    &RBKT8     &RBRC9      &DLLR0      &kp MINUS
&kp TAB    &kp Q      &kp W    &kp E     &kp R      &kp T  &none                                                    &none      &kp Y  &kp U     &kp I      &kp O       &kp P       &kp BSLH
&kp ESC    &kp A      &kp S    &kp D     &kp F      &kp G  &none     &kp LGUI   &mo 1         &mo 1     &kp LSHIFT  &none      &kp H  &kp J     &kp K      &kp L       &kp SEMI    &kp SQT
&kp LSHFT  &kp Z      &kp X    &kp C     &kp V      &kp B                       &kp LALT      &kp RALT                         &kp N  &kp M     &kp COMMA  &kp DOT     &kp FSLH    &kp RSHFT
&mo 1      &kp GRAVE  &ATHASH  &kp LEFT  &kp RIGHT         &kp BSPC  &kp LCTRL  &kp DEL       &kp DEL   &kp ENTER   &kp SPACE         &kp DOWN  &kp UP     &EXCLASTRK  &AMPSPRCNT  &mo 1
            >;
        };

        layer_fn {
            bindings = <
&kp F11  &kp F1      &kp F2        &kp F3        &kp F4      &kp F5  &tog 1                                                &mo 2   &kp F6    &kp F7    &kp F8    &kp F9     &kp F10   &kp F12
&trans   &kp CARET   &kp LBRC      &kp LBKT      &kp LPAR    &kp LT  &none                                                 &none   &kp GT    &kp RPAR  &kp RBKT  &kp RBRC   &kp DLLR  &trans
&trans   &kp C_PREV  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT  &trans  &none             &trans  &trans      &trans  &trans  &none   &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans    &trans
&trans   &trans      &trans        &trans        &trans      &trans                            &trans      &trans                  &trans    &trans    &trans    &trans     &trans    &trans
&trans   &trans      &trans        &trans        &trans              &kp C_PLAY_PAUSE  &trans  &trans      &trans  &trans  &trans            &trans    &trans    &trans     &trans    &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        layer_game {
            bindings = <
&kp EQUAL  &kp NUMBER_1  &kp NUMBER_2  &kp N3  &kp NUMBER_4  &kp N5  &tog 3                                                             &mo 2      &kp N6  &kp N7     &kp N8     &kp N9    &kp N0     &kp MINUS
&kp TAB    &kp Q         &kp W         &kp E   &kp R         &kp T   &kp SPACE                                                          &none      &kp Y   &kp U      &kp I      &kp O     &kp P      &kp BSLH
&kp ESC    &kp A         &kp S         &kp D   &kp F         &kp G   &none          &kp LGUI   &mo 1             &kp RGUI    &mo 1      &none      &kp H   &kp J      &kp K      &kp L     &kp SEMI   &kp SQT
&kp LSHFT  &kp Z         &kp X         &kp C   &kp V         &kp B                             &kp SPACE         &kp RALT                          &kp N   &kp M      &kp COMMA  &kp DOT   &kp FSLH   &kp RSHFT
&mo 1      &kp GRAVE     &kp N6        &kp N7  &kp N8                &kp BACKSPACE  &kp LCTRL  &kp LEFT_ALT      &kp RSHIFT  &kp ENTER  &kp SPACE          &kp GRAVE  &kp TILDE  &kp EXCL  &kp ASTRK  &mo 1
            >;
        };
    };
};
